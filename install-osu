#!/bin/bash

# jvyden's dep-checks method has been replaced
echo -e "Checking if dependencies are installed...\n"

for i in $(cat dependencies.list); do
	which $i > /dev/null
	if [[ $? == "1" ]]; then
		echo "Dependency \"$i\" not found"
		missing_deps=true
	fi
done

if [[ $missing_deps ]]; then
	echo -e "\nInstall missing dependencies and try again"
	exit 1
fi

if [[ $(uname) == "Linux" ]]; then
  os="linux"
else
  echo "Your system is not supported by osu-install"
  exit 1
fi

TMP_DIR="/tmp/osu-wine"
mkdir -p "$TMP_DIR"
cd "$TMP_DIR" # Create tmp files here.

# Styling
BORDER="========================================================================"

print_sect () {
  echo $BORDER
  echo "$1"
  echo $BORDER
}

# set Wine environment variables for installation - change to your liking or needs before installation
if [[ ! -n "$WINEPREFIX" ]] ; then
  export WINEPREFIX="$HOME/Games/osu-wine"
fi
if [[ ! -n "$WINE" ]]; then
  export WINE="wine"
fi
if [[ ! -n "$WINESERVER" ]]; then
  export WINESERVER="wineserver"
fi
if [[ ! -n "$WINETRICKS" ]]; then
  export WINETRICKS="winetricks"
fi
if [[ ! -n "$DISCORDRPC" ]]; then
  export DISCORDRPC="true"
fi
export WINEARCH=win32


# Create wineprefix
print_sect "CREATING WINEPREFIX"
echo "If wine asks you to install wine-mono or wine-gecko, say no or cancel. Installing these will cause problems later."
$WINETRICKS --force dotnet45 # force flag for wine 5.x+ versions; no -q so the user knows whats happening
$WINETRICKS -q cjkfonts gdiplus # fixes fonts, graphics

print_sect "ALSA"
if [[ "$ALSATWEAK" == "true" ]]; then
  $WINETRICKS sound=alsa
else
  echo "Skipping ALSA tweak."
fi

# change directory to newly created prefix
cd "$WINEPREFIX"

# dsound tweak
print_sect "dsound tweak"
cat > dsound.reg << "EOF"
Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Software\Wine\DirectSound]
"HelBuflen"="512"
"SndQueueMax"="3"
EOF

"$WINE" regedit dsound.reg

# osu! Installer
print_sect "Installing osu! Do NOT change the path in the osu!-installer as this will mess with the actual install path set with the WINEPREFIX-variable. Please close the client after it has launched! (and prepare for maximum volume, thanks peppy)"
echo "If you haven't already DO NOT FORGET TO ADD $HOME/.local/bin to your PATH with the following command (append it to the end of $HOME/.bash_profile as explained in the github readme):"
echo "export PATH=$HOME/.local/bin/:$PATH"
print_sect "If you understood the above directions press Enter to proceed."
read

if [[ -e "osu!install.exe" ]]; then
  echo "osu! installer already downloaded!"
else
  echo "Downloading osu! installer..."
  wget 'https://m1.ppy.sh/r/osu!install.exe'
fi

"$WINE" "osu!install.exe"


print_sect "POST INSTALL STEPS"
# Post install
OSU_SC_PATH="$HOME/Games/osu"

if [[ ! -e $OSU_SC_PATH ]] ; then
  ln -sv "$WINEPREFIX/drive_c/users/$USER/AppData/Local/osu!" "$OSU_SC_PATH"
  echo "Created osu! folder shortcut in current user's home."
fi

# Launch script
cat > osu << "EOF"
#!/bin/sh
export vblank_mode=0
export __GL_SYNC_TO_VBLANK=0
export WINEARCH=win32
EOF

echo "export WINEPREFIX=\"$WINEPREFIX\""  >> osu
echo "cd \"$WINEPREFIX/drive_c/users/$USER/AppData/Local/osu!\"" >> osu

print_sect "Discord RPC"
if [[ "$DISCORDRPC" == "true" ]]; then
  echo "Downloading Discord RPC bridge..."
  curl -O -J -L 'https://github.com/0e4ef622/wine-discord-ipc-bridge/releases/download/v0.0.2/winediscordipcbridge.exe'
  mv "winediscordipcbridge.exe" "$WINEPREFIX/drive_c/users/$USER/Local Settings/Application Data/osu!/"
  if [[ $os == "linux" ]]; then
    echo "\"$WINE\" \"$WINEPREFIX/drive_c/users/$USER/AppData/Local/osu!/winediscordipcbridge.exe\" &" >> osu
  fi
else
  echo "Skipping Discord RPC install."
fi

if [[ $os == "linux" ]]; then
  echo "$WINE \"$WINEPREFIX/drive_c/users/$USER/AppData/Local/osu!/osu!.exe\" \"\$@\"" >> osu
fi


# creating bin folder in .local in case it doesn't exist to avoid use of root
# use command in the following line if commands do not work after finishing the script
# export PATH=$HOME/.local/bin/:$PATH
mkdir -p "$HOME/.local/bin/"
mv osu $HOME/.local/bin/osu
chmod +x $HOME/.local/bin/osu


# Kill script
cat > osukill << "EOF"
#!/bin/sh
export WINEARCH=win32
EOF

echo "export WINEPREFIX=\"$WINEPREFIX\"" >> osukill
echo "\"$WINESERVER\" -k" >> osukill

mv osukill $HOME/.local/bin/osukill
chmod +x $HOME/.local/bin/osukill

if [[ $os == "linux" ]]; then
  # Desktop file
  OSU_LOGO_URL="https://i.ppy.sh/916068c8e2d5f90be7766da5ce0ee7a7ea6c99b3/68747470733a2f2f6f73752e7070792e73682f68656c702f77696b692f4272616e645f6964656e746974795f67756964656c696e65732f696d672f75736167652d66756c6c2d636f6c6f75722e706e67"
  wget "$OSU_LOGO_URL" -O "$HOME/.local/share/icons/osulogo.png"

  cat > "osu!.desktop" << "EOF"
[Desktop Entry]
Encoding=UTF-8
Name=osu!
Comment=A free-to-win rhythm game. Rhythm is just a click away!
Type=Application
Exec=osu %F
Icon=osulogo
StartupWMClass=osu!.exe
Categories=Games
EOF
  mv "osu!.desktop" "$HOME/.local/share/applications"
  chmod +x "$HOME/.local/share/applications/osu!.desktop"
fi
# Cleanup
cd /tmp
rm -r "$TMP_DIR"

# Finished!
print_sect "Finished! Please report any issues with this script at https://github.com/marshallracer/osu-wine-install-script"
